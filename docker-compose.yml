services:
  # This docker compose file is for running on the web, not locally. Make sure you are using the correct one.
  # PostgreSQL Database with CPIC data
  db:
    image: postgres:15
    container_name: pgx_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: cpic_user
      POSTGRES_PASSWORD: test123
      POSTGRES_DB: cpic_db
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
      - ./db/migrations:/docker-entrypoint-initdb.d/migrations
    ports:
      - "5444:5432"
    healthcheck:
      test: ["CMD", "echo", "Healthcheck disabled for debugging"]
      interval: 10s
      timeout: 5s
      retries: 1
    networks:
      - pgx-network

  # Reference genome downloader service
  genome-downloader:
    build:
      context: ./docker/genome-downloader
      dockerfile: Dockerfile.downloader
    container_name: pgx_genome_downloader
    volumes:
      - ./reference:/reference
    environment:
      - DOWNLOAD_ON_STARTUP=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5050/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "5050:5050"
    networks:
      - pgx-network

  # PharmCAT Service - using official Docker image
  pharmcat:
    image: pgkb/pharmcat
    container_name: pgx_pharmcat
    restart: unless-stopped
    volumes:
      - ./data:/pharmcat/data
      - pharmcat-jar:/pharmcat
    ports:
      - "2323:8080"
    environment:
      - JAVA_OPTS=-Xmx4g
      - PHARMCAT_LOG_LEVEL=DEBUG
    healthcheck:
      test: ["CMD", "echo", "Healthcheck disabled for debugging"]
      interval: 10s
      timeout: 5s
      retries: 1
    networks:
      - pgx-network

  # HAPI FHIR Server for EHR integration
  fhir-server:
    image: hapiproject/hapi:v6.8.0
    container_name: pgx_fhir_server
    restart: unless-stopped
    ports:
      - "8090:8080"
    environment:
      - hapi.fhir.allow_external_references=true
      - hapi.fhir.allow_multiple_delete=true
      - hapi.fhir.reuse_cached_search_results_millis=60000
      - spring.datasource.url=jdbc:postgresql://db:5432/cpic_db?currentSchema=fhir
      - spring.datasource.username=cpic_user
      - spring.datasource.password=test123
      - spring.datasource.driverClassName=org.postgresql.Driver
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.properties.hibernate.default_schema=fhir
      - spring.jpa.open-in-view=false
      - hapi.fhir.max_page_size=50
      - hapi.fhir.default_page_size=20
      - hapi.fhir.subscription.resthook_enabled=true
      - hapi.fhir.subscription.websocket_enabled=false
      - JAVA_OPTS=-Djava.io.tmpdir=/tmp -Xmx2g
    depends_on:
      - db
    volumes:
      - ./data/fhir-data:/data/hapi
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/fhir/metadata"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - pgx-network

  # PharmCAT Wrapper Service
  pharmcat-wrapper:
    build:
      context: ./docker/pharmcat
      dockerfile: Dockerfile.pharmcat-wrapper
    container_name: pgx_pharmcat_wrapper
    restart: unless-stopped
    depends_on:
      - pharmcat
    environment:
      - DATA_DIR=/data
      - PHARMCAT_JAR=/pharmcat/pharmcat.jar
    volumes:
      - ./data:/data
      - pharmcat-jar:/pharmcat:ro
    ports:
      - "5001:5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - pgx-network

  # GATK API Service - provides HTTP endpoints for the app
  gatk-api:
    build:
      context: ./docker/gatk-api
      dockerfile: Dockerfile.gatk-api
    container_name: pgx_gatk_api
    restart: unless-stopped
    depends_on:
      genome-downloader:
        condition: service_healthy
    volumes:
      - ./data:/data
      - ./reference:/reference
    environment:
      - REFERENCE_DIR=/reference
      - DATA_DIR=/data
      - MAX_MEMORY=20g
      - PYTHONPATH=/app
      - UVICORN_RELOAD_EXCLUDES=".git/*,.venv/*"
    ports:
      - "5002:5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - pgx-network
    deploy:
      resources:
        limits:
          memory: 28G

  # PyPGx Service for CYP2D6 star allele calling
  pypgx:
    build:
      context: ./docker/pypgx
      dockerfile: Dockerfile.pypgx
    container_name: pgx_pypgx
    restart: unless-stopped
    depends_on:
      genome-downloader:
        condition: service_healthy
    volumes:
      - ./data:/data
      - ./reference:/reference
    environment:
      - DATA_DIR=/data
      - REFERENCE_DIR=/reference
    ports:
      - "5003:5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - pgx-network

  # Main FastAPI Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pgx_app
    restart: unless-stopped
    depends_on:
      - db
      - pharmcat-wrapper
      - gatk-api
      - pypgx
    environment:
      - DATABASE_URL=postgresql://cpic_user:${POSTGRES_PASSWORD}@db:5432/cpic_db
      - SECRET_KEY=${SECRET_KEY}
      - PHARMCAT_API_URL=http://pharmcat-wrapper:5000
      - PHARMCAT_SERVICE_URL=http://pharmcat:8080
      - PHARMCAT_JAR_PATH=/pharmcat/pharmcat.jar
      - GATK_API_URL=http://gatk-api:5000
      - PYPGX_API_URL=http://pypgx:5000
      - GENOME_DOWNLOADER_API_URL=http://genome-downloader:5050
      - FHIR_SERVER_URL=http://fhir-server:8080/fhir
      - PYTHONPATH=/app
      - PYTHONDONTWRITEBYTECODE=1 # Prevent creation of .pyc files for debugging
      - LOG_LEVEL=DEBUG # Increase logging verbosity
    volumes:
      - ./:/app  # Mount the entire project directory to /app instead of root
      - ./data:/data
    ports:
      - "0.0.0.0:8765:8000"
    healthcheck:
      test: ["CMD", "echo", "Healthcheck disabled for debugging"]
      interval: 10s
      timeout: 5s
      retries: 1
    networks:
      - pgx-network
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

volumes:
  pgdata:
    driver: local
  pharmcat-jar:
    driver: local
  fhir-data:
    driver: local

networks:
  pgx-network:
    name: pgx-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16 