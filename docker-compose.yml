services:
  # PostgreSQL Database with CPIC data
  db:
    image: postgres:15
    container_name: pgx_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: cpic_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: cpic_db
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cpic_user -d cpic_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pgx-network

  # PharmCAT Service - using official Docker image
  pharmcat:
    image: pgkb/pharmcat
    container_name: pgx_pharmcat
    restart: unless-stopped
    volumes:
      - ./data:/pharmcat/data
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "java", "-jar", "/pharmcat/pharmcat.jar", "--version"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 30s
    networks:
      - pgx-network

  # PharmCAT Wrapper Service
  pharmcat-wrapper:
    build:
      context: ./docker/pharmcat
      dockerfile: Dockerfile.pharmcat-wrapper
    container_name: pgx_pharmcat_wrapper
    restart: unless-stopped
    depends_on:
      pharmcat:
        condition: service_healthy
    environment:
      - DATA_DIR=/data
      - PHARMCAT_HOST=pgx_pharmcat
    volumes:
      - ./data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "5001:5000"
    healthcheck:
      test: ["CMD", "/app/health.sh"]
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 90s
    networks:
      - pgx-network

  # Aldy Service for CYP2D6 calling
  aldy:
    build:
      context: ./docker/aldy
      dockerfile: Dockerfile.aldy
    container_name: pgx_aldy
    restart: unless-stopped
    volumes:
      - ./data:/data
    ports:
      - "5002:5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 15s
      retries: 5
    networks:
      - pgx-network

  # Main FastAPI Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pgx_app
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      pharmcat-wrapper:
        condition: service_started
      aldy:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql://cpic_user:${POSTGRES_PASSWORD}@db:5432/cpic_db
      - SECRET_KEY=${SECRET_KEY}
      - PHARMCAT_API_URL=http://pharmcat-wrapper:5000
      - ALDY_API_URL=http://aldy:5000
    volumes:
      - ./app:/app
      - ./data:/data
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "/app/health.sh"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s
    networks:
      - pgx-network

volumes:
  pgdata:
    driver: local

networks:
  pgx-network:
    driver: bridge 