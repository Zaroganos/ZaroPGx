# ZaroPGx example environment configuration
# Copy this file to .env and adjust values as needed
# 
# For different environments, you can also use:
# - .env.local (local development)
# - .env.production (web deployment)
# 
# Run with: docker compose --env-file .env.local up -d

# --- Core application ---
SECRET_KEY=change_me
LOG_LEVEL=DEBUG
ZAROPGX_DEV_MODE=true
AUTHOR_NAME=Your Name
SOURCE_URL=https://github.com/Zaroganos/ZaroPGx
# Optional: override version shown in reports
ZAROPGX_VERSION=

# --- Security Configuration ---
# JWT token settings (used by main.py authentication)
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# --- Database (application) ---
DB_USER=cpic_user
DB_PASSWORD=test123
DB_HOST=db
DB_PORT=5432
DB_NAME=cpic_db

# --- Database (container init) ---
# Used by the Postgres container and for building DATABASE_URL in docker-compose
POSTGRES_PASSWORD=test123

# --- Internal service URLs ---
NEXTFLOW_RUNNER_URL=http://nextflow:5055
GENOME_DOWNLOADER_API_URL=http://genome-downloader:5050
GATK_API_URL=http://gatk-api:5000
PYPGX_API_URL=http://pypgx:5000
PHARMCAT_API_URL=http://pharmcat:5000
PHARMCAT_JAR_PATH=/pharmcat/pharmcat.jar
FHIR_SERVER_URL=http://fhir-server:8080/fhir

# --- Toggle Services ---
# These should typically be left as true by default.
# Eligible services can be toggled on/off in the UI.
GATK_ENABLED=true
PYPGX_ENABLED=true
OPTITYPE_ENABLED=true
GENOME_DOWNLOADER_ENABLED=true
KROKI_ENABLED=true
HAPI_FHIR_ENABLED=true

# --- Nextflow configuration ---
USE_NEXTFLOW=true

# --- Report artifact toggles ---
# Control inclusion of original PharmCAT outputs alongside app-generated reports
INCLUDE_PHARMCAT_HTML=true
INCLUDE_PHARMCAT_JSON=false
INCLUDE_PHARMCAT_TSV=false

# --- PDF Generation Configuration ---
# PDF_ENGINE: Choose between 'weasyprint' (default) or 'reportlab'
# - weasyprint: Better HTML/CSS support, modern rendering
# - reportlab: Better text rendering, more reliable for complex layouts
PDF_ENGINE=weasyprint
# PDF_FALLBACK: Enable automatic fallback if primary engine fails (true/false)
PDF_FALLBACK=true
EXECSUM_USE_TSV=true

# --- Optional integrations / tuning ---
# If set, shown in report platform table (otherwise auto-detected when possible)
HAPI_FHIR_VERSION=
# Use a private Kroki instance for diagram rendering (defaults to https://kroki.io)
# Make sure you set this to the correct URL for your Kroki instance
KROKI_URL=https://kroki.io

# PharmCAT configuration
PHARMCAT_VERSION=3.0.1
PHARMCAT_LOG_LEVEL=DEBUG

# PyPGx configuration
PYPGX_PHARMCAT_PREFERENCE=pypgx
PYPGX_MEMORY_LIMIT=12G
PYPGX_MAX_PARALLEL_GENES=8
PYPGX_BATCH_SIZE=4

# Memory and logging hints for services (may also be set directly in compose)
JAVA_OPTS=-Xmx4g
PHARMCAT_LOG_LEVEL=DEBUG
MAX_MEMORY=20g

# --- File Paths ---
# Upload and report directory paths (with sensible defaults)
DATA_DIR=/data
TEMP_DIR=/data/temp
UPLOAD_DIR=/data/uploads
REPORT_DIR=/data/reports

# --- Docker Compose Overrides ---
# Network binding configuration:
# - Local development: BIND_ADDRESS=8765 (localhost only)
# - Production/web: BIND_ADDRESS=0.0.0.0:8765 (all interfaces)
BIND_ADDRESS=8765

# Network subnet configuration:
# - Local development: NETWORK_SUBNET=172.20.0.0/16
# - Production/web: NETWORK_SUBNET=172.28.0.0/16
NETWORK_SUBNET=172.20.0.0/16

# Header inspection caps
MAX_HEADER_READ_BYTES=1000000000
MAX_HEADER_PARSE_TIMEOUT_SEC=300

# Upload caps
MAX_UPLOAD_SIZE_BYTES=2000000000
MAX_UPLOAD_TIMEOUT_SEC=600

# --- OptiType --- (CURRENTLY UNUSED, USING HLATYPING INSTEAD)
# Image tag for fred2/optitype (set to a specific release if desired)
# See documentation: https://github.com/FRED-2/OptiType
OPTITYPE_VERSION=1.3.5
OPTITYPE_API_URL=http://optitype:5000
