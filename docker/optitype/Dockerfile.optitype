FROM biocontainers/biocontainers:latest

LABEL description="OptiType (built from source) with wrapper API for ZaroPGx"
LABEL maintainer="ZaroPGx (wrapper only)"

ARG OPTITYPE_VERSION=1.3.5

USER root

# install
RUN apt-get update && apt-get install -y software-properties-common \
&& add-apt-repository ppa:deadsnakes/ppa \
&& apt-get update && apt-get install -y \
    python3 python3-venv python3-distutils python3-dev \
    curl \
&& curl -sS https://bootstrap.pypa.io/get-pip.py | python3 \
&& ln -sf /usr/bin/python3 /usr/bin/python \
&& ln -sf /usr/bin/python3 /usr/bin/python3 \
&& apt-get install -y \
    gcc-4.9 \
    g++-4.9 \
    coinor-cbc \
    zlib1g-dev \
    libbz2-dev \
    bash \
    git \
&& update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-4.9 \
&& rm -rf /var/lib/apt/lists/* \
&& apt-get clean \
&& apt-get purge

RUN ln -sf /usr/bin/python3 /usr/bin/python

#HLA Typing
#OptiType dependecies
RUN curl -O https://support.hdfgroup.org/ftp/HDF5/current18/bin/hdf5-1.8.21-Std-centos7-x86_64-shared_64.tar.gz \
    && tar -xvf hdf5-1.8.21-Std-centos7-x86_64-shared_64.tar.gz \
    && mv hdf5/bin/* /usr/local/bin/ \
    && mv hdf5/lib/* /usr/local/lib/ \
    && mv hdf5/include/* /usr/local/include/ \
    && mv hdf5/share/* /usr/local/share/ \
    && rm -rf hdf5/ \
    && rm -f hdf5-1.8.21-Std-centos7-x86_64-shared_64.tar.gz


ENV LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH
ENV HDF5_DIR /usr/local/

# Install uv
#ENV PATH="/home/biodocker/.local/bin:${PATH}"

# RUN curl -LsSf https://astral.sh/uv/install.sh | sh \
#  && ln -s /root/.local/bin/uv /usr/local/bin/uv

RUN pip install --upgrade pip \
&& pip install --no-cache-dir \
    numpy \
    pyomo \
    pysam \
    matplotlib \
    tables \
    pandas \
    future

#installing optitype form git repository (version Dec 09 2015) and writing config.ini
RUN git clone https://github.com/FRED-2/OptiType.git \
&& sed -i -e '1i#!/usr/bin/env python' OptiType/OptiTypePipeline.py \
&& mv OptiType/ /usr/local/bin/ \
&& chmod 777 /usr/local/bin/OptiType/OptiTypePipeline.py \
&& echo "[mapping]\n\
razers3=/usr/local/bin/razers3 \n\
threads=1 \n\
\n\
[ilp]\n\
solver=cbc \n\
threads=1 \n\
\n\
[behavior]\n\
deletebam=true \n\
unpaired_weight=0 \n\
use_discordant=false\n" >> /usr/local/bin/OptiType/config.ini

#installing razers3
RUN git clone https://github.com/seqan/seqan.git seqan-src \
    && cd seqan-src \
    && cmake -DCMAKE_BUILD_TYPE=Release \
    && make razers3 \
    && cp bin/razers3 /usr/local/bin \
    && cd .. \
    && rm -rf seqan-src

ENV PATH=/usr/local/bin/OptiType:$PATH

# Change user to back to biodocker
USER biodocker

# Combined typical "data" dir with our "app" directory for wrapper
# Change workdir to /app/
WORKDIR /app/
COPY optitype_wrapper.py /app/

# Define default command
ENTRYPOINT ["OptiTypePipeline.py"]
CMD ["-h"]

# Install FastAPI/uvicorn in base (Python 3) env for the wrapper
RUN pip3 install --no-cache-dir fastapi uvicorn python-multipart

# Expose API port
EXPOSE 5000

# Healthcheck: ensure OptiType pipeline exists and py27 env is runnable
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD bash -lc 'test -f /opt/OptiType/OptiTypePipeline.py && conda run -n optitype-py27 python --version >/dev/null 2>&1'

# Start the FastAPI server
CMD ["uvicorn", "optitype_wrapper:app", "--host", "0.0.0.0", "--port", "5000"]