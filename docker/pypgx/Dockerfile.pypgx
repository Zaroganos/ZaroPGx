FROM python:3.12-slim

LABEL description="PyPGx 0.25.0 service for the ZaroPGx pipeline"
LABEL maintainer="ZaroPGx (wrapper only)"

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget \
    git \
    curl \
    unzip \
    default-jdk \
    procps \
    gcc \
    g++ \
    libbz2-dev \
    liblzma-dev \
    libcurl4-openssl-dev \
    zlib1g-dev \
    libncurses5-dev \
    bcftools \
    tabix \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set up working directories
RUN mkdir -p /app /data /reference /tmp/pypgx

# Install uv and use it for Python deps
RUN curl -LsSf https://astral.sh/uv/install.sh | sh
ENV PATH="/root/.local/bin:${PATH}"
# Install PyPGx and dependencies (ensure compatibility with Python 3.12)
RUN uv pip install --system setuptools==80.9.0 fuc pypgx scikit-learn autodocsumm psutil

# Clone the matching PyPGx bundle repository
# NB: pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81
RUN cd /root && git clone --branch $(pip show pypgx | grep -oP 'Version: \K.*') --depth 1 https://github.com/sbslee/pypgx-bundle || \
    git clone --branch 0.25.0 --depth 1 https://github.com/sbslee/pypgx-bundle

# Create a simple script to setup environment and run server
WORKDIR /app

# Copy the wrapper script
COPY pypgx_wrapper.py /app/
COPY setup_pypgx.sh /app/

# Make the setup script executable
RUN chmod +x /app/setup_pypgx.sh

# Expose the port the app runs on
EXPOSE 5000

# Set environment variables
ENV PYTHONPATH=/app
ENV DATA_DIR=/data
ENV REFERENCE_DIR=/reference

# Health check to ensure the API is responsive
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:5000/health || exit 1

# Start the wrapper
CMD ["/app/setup_pypgx.sh"] 