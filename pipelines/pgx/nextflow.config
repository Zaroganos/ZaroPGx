profiles {
  standard {
    process.executor = 'local'
  }
  docker {
    process.executor = 'local'
    docker.enabled = true
    docker.runOptions = '--network pgx-network'
  }
  conda {
    process.executor = 'local'
    conda.enabled = true
    conda.channels = 'conda-forge,bioconda'
  }
}

params {
  skip_hla = false
  reference = 'hg38'
  outdir = 'data/reports'
}

process {
  errorStrategy = 'retry'
  maxRetries = 1

  // Alignment and conversion processes (higher resource requirements)
  withName:FastqToBAM { cpus = 4; memory = '16 GB' }
  withName:CramToBAM { cpus = 4; memory = '8 GB' }
  withName:SamToBAM { cpus = 4; memory = '8 GB' }
  
  // HLA calling (optimal on FASTQ, fallback on BAM)
  withName:OptiTypeHLAFromFastq { cpus = 4; memory = '32 GB' }
  withName:OptiTypeHLAFromBAM { cpus = 4; memory = '32 GB' }
  
  // PyPGx processes (optimal on BAM, fallback on VCF)
  withName:PyPGxBam2Vcf { cpus = 2; memory = '8 GB' }
  withName:PyPGxGenotypeAll { cpus = 4; memory = '12 GB' }
  
  // PharmCAT analysis (optimal on VCF with outside calls, fallback on plain VCF)
  withName:PharmCATRun { cpus = 4; memory = '8 GB' }
}

workDir = 'data/nextflow/work'

// Enable verbose logging
trace {
    enabled = true
    file = 'data/nextflow/trace.txt'
    fields = 'task_id,hash,native_id,process,tag,name,status,exit,module,container,tag,attempt,submit,start,complete,duration,realtime,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes'
}

// Console logging
log {
    level = 'INFO'
    file = 'data/nextflow/nextflow.log'
}

timeline {
    enabled = true
    file = 'data/nextflow/timeline.html'
}

report {
    enabled = true
    file = 'data/nextflow/report.html'
}

dag {
    enabled = false
    file = 'data/nextflow/dag.html'
}


